//package JUnit;
//
//public class TimeoutAnnotation {
//import org.junit.jupiter.api.Test;
//import org.junit.jupiter.api.Timeout;
//class MainTest {
//
//    @Test
//    @Timeout(5)//test will fail it doesn't finish executing within 5 seconds
//    public void testLogin(){
//        // write the code to test login functionality
//        try{
//            // freeze your code for 27 seconds->hard waits
//            Thread.sleep(7000);
//        }catch(InterruptedException e){
//
//        }
//    }
//    class TimeoutDemo {
//
//        @BeforeEach
//        @Timeout(5)
//        void setUp() {
//            // fails if execution time exceeds 5 seconds
//        }
//
//        @Test
//        @Timeout(value = 500, unit = TimeUnit.MILLISECONDS)
//        void failsIfExecutionTimeExceeds500Milliseconds() {
//            // fails if execution time exceeds 500 milliseconds
//        }
//
//        @Test
//        @Timeout(value = 500, unit = TimeUnit.MILLISECONDS, threadMode = ThreadMode.SEPARATE_THREAD)
//        void failsIfExecutionTimeExceeds500MillisecondsInSeparateThread() {
//            // fails if execution time exceeds 500 milliseconds, the test code is executed in a separate thread
//        }
//
//    }
//}
//To apply the same timeout to all test methods within a test class and all of its @Nested classes,
// you can declare the @Timeout annotation at the class level. It will then be applied to all test,
// test factory, and test template methods within that class and its @Nested classes unless overridden
// by a @Timeout annotation on a specific method or @Nested class. Please note that
// @Timeout annotations declared at the class level are not applied to lifecycle methods.
//
//Declaring @Timeout on a @TestFactory method checks that the factory method returns
// within the specified duration but does not verify the execution time of each individual
// DynamicTest generated by the factory. Please use assertTimeout() or assertTimeoutPreemptively()
// for that purpose.
//
//If @Timeout is present on a @TestTemplate method — for example, a @RepeatedTest or
// @ParameterizedTest — each invocation will have the given timeout applied to it.

//*****************HOMEWORK************
//import org.junit.jupiter.api.Test;
//import org.junit.jupiter.api.Timeout;
//
//import static org.junit.jupiter.api.Assertions.*;
//
//class InternetSpeedTest {
//
//    public int checkInternetSpeed(String wireMaterial, String plan, int numUsers) throws InterruptedException {
//        int speed = 0;
//
//        if ("fiber".equals(wireMaterial)) {
//            // Simulate testing fiber internet speed (takes 6 seconds)
//            Thread.sleep(4000);
//            speed = 1000; // Mbps
//        } else if ("copper".equals(wireMaterial)) {
//            // Simulate testing copper internet speed (takes 3 seconds)
//            Thread.sleep(1500);
//            speed = 100; // Mbps
//        }
//
//        if ("premium".equals(plan)) {
//            // Premium plan speed boost (takes 2 seconds)
//            Thread.sleep(1000);
//            speed *= 2;
//        }
//
//        if (numUsers > 5) {
//            // Simulate network congestion for more users (takes 4 seconds)
//            Thread.sleep(2500);
//            speed /= 2;
//        }
//
//        return speed;
//    }
//}
//
//class MainTest{
//    InternetSpeedTest one = new InternetSpeedTest();
//    @Test
//    @Timeout(6)
//    public void testCheckInternetSpeed_FiberPremium5Users()throws InterruptedException{
//int result = one.checkInternetSpeed("fiber", "premium", 5);
//try{
//    Thread.sleep(500);
//}catch(InterruptedException e){
//
//}
//assertEquals(2000, result);
//    }
//    @Test
//    @Timeout(2)
//    public void testCheckInternetSpeed_CopperBasic1User()throws InterruptedException{
//int result = one.checkInternetSpeed("copper", "basic", 1);
//try{
//    Thread.sleep(400);
//}catch(InterruptedException e){
//
//}
//assertEquals(100, result);
//    }
//     @Test
//    @Timeout(6)
//    public void testCheckInternetSpeed_CopperPremium10Users()throws InterruptedException{
//int result = one.checkInternetSpeed("copper", "premium", 10);
//try{
//    Thread.sleep(500);
//}catch(InterruptedException e){
//
//}
//assertEquals(100, result);
//    }
//}
